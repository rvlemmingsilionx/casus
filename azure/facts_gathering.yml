####################  NFS  ####################
---
- hosts: nfsservers
  tasks:
  - name: Check if NFS is running. # Moet nog een SSH check worden toegevoegd
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - nfs-kernel-server
      - sshd
    become: yes
    ignore_errors: True

  - name: Get service facts
    service_facts:
    register: service_facts
    ignore_errors: True

  - name: Create empty file if not present
    copy:
      content: ""
      dest: /var/www/html/dataserver.txt
      force: yes
      group: nogroup
      owner: nobody
      mode: 0775
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

  - name: Put variables into file.
    lineinfile:
      path: /var/www/html/dataserver.txt
      line: "{{ item }}"
      create: no
    with_items:
      - "{{ ansible_hostname }} \n{{ service_facts.ansible_facts.services['nfs-kernel-server'] | to_nice_yaml }}"
      - "{{ service_facts.ansible_facts.services['ssh'] | to_nice_yaml }}"
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

####################  Backup  ####################

- hosts: backupserver
  tasks:
  - name: Check if backup is running. # Moet nog een SSH check worden toegevoegd
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - sshd
    become: yes
    ignore_errors: True

  - name: Get service facts
    service_facts:
    register: service_facts
    ignore_errors: True

  - name: Create empty file if not present
    copy:
      content: ""
      dest: /var/www/html/backupserver.txt
      force: yes
      group: nogroup
      owner: nobody
      mode: 0775
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

  - name: Put variables into file.
    lineinfile:
      path: /var/www/html/backupserver.txt
      line: "{{ item }}"
      create: no
    with_items:
      - "{{ ansible_hostname }} \n{{ service_facts.ansible_facts.services['ssh'] | to_nice_yaml }}"
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

####################  SQL  ####################

- hosts: sqlservers
  tasks:
  - name: Check if SQL is running. # Moet nog een SSH check worden toegevoegd
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - mysql
    become: yes
    ignore_errors: True

  - name: Get service facts
    service_facts:
    register: service_facts
    ignore_errors: True

  - name: Create empty file if not present
    copy:
      content: ""
      dest: /var/www/html/sqlserver.txt
      force: yes
      group: nogroup
      owner: nobody
      mode: 0775
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

  - name: Put variables into file.
    lineinfile:
      path: /var/www/html/sqlserver.txt
      line: "{{ item }}"
      create: no
    with_items:
      - "{{ ansible_hostname }} \n{{ service_facts.ansible_facts.services['mysql'] | to_nice_yaml }}"
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

####################  WEBSERVER  ####################

- hosts: webservers
  tasks:
  - name: Check if web is running. # Moet nog een SSH check worden toegevoegd
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - apache2
    become: yes
    ignore_errors: True

  - name: Get service facts
    service_facts:
    register: service_facts
    ignore_errors: True

  - name: Create empty file if not present
    copy:
      content: ""
      dest: /var/www/html/webservers.txt
      force: yes
      group: nogroup
      owner: nobody
      mode: 0775
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

  - name: Put variables into file.
    lineinfile:
      path: /var/www/html/webservers.txt
      line: "{{ item }}"
      create: no
    with_items:
      - "{{ ansible_hostname }} \n{{ service_facts.ansible_facts.services['apache2'] | to_nice_yaml }}"
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

####################  Last update  ####################
- hosts: localhost
  tasks:
  - name: Create empty file if not present
    copy:
      content: ""
      dest: /var/www/html/timestamp.txt
      force: yes
      group: nogroup
      owner: nobody
      mode: 0775
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True

  - name: Get date and time
    shell: date
    register: timestamp
    ignore_errors: True

  - name: Get last update timestamp
    lineinfile:
      path: /var/www/html/timestamp.txt
      line: "{{ item }}"
      create: no
    with_items:
      - "{{ timestamp.stdout }}"
    delegate_to: 127.0.0.1
    become: yes
    ignore_errors: True
